{"dependencies":[{"name":"../toDate/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = eachDayOfInterval;\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../toDate/index.js\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function eachDayOfInterval(dirtyInterval, options) {\n    if (arguments.length < 1) {\n      throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n    }\n\n    var interval = dirtyInterval || {};\n    var startDate = (0, _index.default)(interval.start);\n    var endDate = (0, _index.default)(interval.end);\n    var endTime = endDate.getTime();\n\n    if (!(startDate.getTime() <= endTime)) {\n      throw new RangeError('Invalid interval');\n    }\n\n    var dates = [];\n    var currentDate = startDate;\n    currentDate.setHours(0, 0, 0, 0);\n    var step = options && 'step' in options ? Number(options.step) : 1;\n    if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n    while (currentDate.getTime() <= endTime) {\n      dates.push((0, _index.default)(currentDate));\n      currentDate.setDate(currentDate.getDate() + step);\n      currentDate.setHours(0, 0, 0, 0);\n    }\n\n    return dates;\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"eachDayOfInterval"],[7,37,6,0],[9,0,8,0],[9,6,8,4,"_index"],[9,12,8,10],[9,15,8,13,"_interopRequireDefault"],[9,37,8,35],[9,38,8,36,"require"],[9,49,8,43],[9,90,8,35],[9,91,8,0],[11,0,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,0],[11,34,10,32,"obj"],[11,37,10,0],[11,39,10,37],[12,0,10,39],[12,11,10,46,"obj"],[12,14,10,49],[12,18,10,53,"obj"],[12,21,10,56],[12,22,10,57,"__esModule"],[12,32,10,46],[12,35,10,70,"obj"],[12,38,10,46],[12,41,10,76],[13,0,10,78,"default"],[13,6,10,78,"default"],[13,13,10,85],[13,15,10,87,"obj"],[14,0,10,76],[14,5,10,39],[15,0,10,95],[17,0,73,0],[17,11,73,9,"eachDayOfInterval"],[17,28,73,0],[17,29,73,27,"dirtyInterval"],[17,42,73,0],[17,44,73,42,"options"],[17,51,73,0],[17,53,73,51],[18,0,74,2],[18,8,74,6,"arguments"],[18,17,74,15],[18,18,74,16,"length"],[18,24,74,6],[18,27,74,25],[18,28,74,2],[18,30,74,28],[19,0,75,4],[19,12,75,10],[19,16,75,14,"TypeError"],[19,25,75,10],[19,26,75,24],[19,61,75,59,"arguments"],[19,70,75,68],[19,71,75,69,"length"],[19,77,75,24],[19,80,75,78],[19,90,75,10],[19,91,75,4],[20,0,76,3],[22,0,78,2],[22,8,78,6,"interval"],[22,16,78,14],[22,19,78,17,"dirtyInterval"],[22,32,78,30],[22,36,78,34],[22,38,78,2],[23,0,79,2],[23,8,79,6,"startDate"],[23,17,79,15],[23,20,79,18],[23,21,79,19],[23,24,79,22,"_index"],[23,30,79,28],[23,31,79,29,"default"],[23,38,79,18],[23,40,79,38,"interval"],[23,48,79,46],[23,49,79,47,"start"],[23,54,79,18],[23,55,79,2],[24,0,80,2],[24,8,80,6,"endDate"],[24,15,80,13],[24,18,80,16],[24,19,80,17],[24,22,80,20,"_index"],[24,28,80,26],[24,29,80,27,"default"],[24,36,80,16],[24,38,80,36,"interval"],[24,46,80,44],[24,47,80,45,"end"],[24,50,80,16],[24,51,80,2],[25,0,81,2],[25,8,81,6,"endTime"],[25,15,81,13],[25,18,81,16,"endDate"],[25,25,81,23],[25,26,81,24,"getTime"],[25,33,81,16],[25,35,81,2],[27,0,83,2],[27,8,83,6],[27,10,83,8,"startDate"],[27,19,83,17],[27,20,83,18,"getTime"],[27,27,83,8],[27,33,83,31,"endTime"],[27,40,83,6],[27,41,83,2],[27,43,83,41],[28,0,84,4],[28,12,84,10],[28,16,84,14,"RangeError"],[28,26,84,10],[28,27,84,25],[28,45,84,10],[28,46,84,4],[29,0,85,3],[31,0,87,2],[31,8,87,6,"dates"],[31,13,87,11],[31,16,87,14],[31,18,87,2],[32,0,88,2],[32,8,88,6,"currentDate"],[32,19,88,17],[32,22,88,20,"startDate"],[32,31,88,2],[33,0,89,2,"currentDate"],[33,4,89,2,"currentDate"],[33,15,89,13],[33,16,89,14,"setHours"],[33,24,89,2],[33,25,89,23],[33,26,89,2],[33,28,89,26],[33,29,89,2],[33,31,89,29],[33,32,89,2],[33,34,89,32],[33,35,89,2],[34,0,90,2],[34,8,90,6,"step"],[34,12,90,10],[34,15,90,13,"options"],[34,22,90,20],[34,26,90,24],[34,36,90,34,"options"],[34,43,90,13],[34,46,90,44,"Number"],[34,52,90,50],[34,53,90,51,"options"],[34,60,90,58],[34,61,90,59,"step"],[34,65,90,50],[34,66,90,13],[34,69,90,67],[34,70,90,2],[35,0,91,2],[35,8,91,6,"step"],[35,12,91,10],[35,15,91,13],[35,16,91,6],[35,20,91,18,"isNaN"],[35,25,91,23],[35,26,91,24,"step"],[35,30,91,23],[35,31,91,2],[35,33,91,31],[35,39,91,37],[35,43,91,41,"RangeError"],[35,53,91,37],[35,54,91,52],[35,102,91,37],[35,103,91,31],[37,0,93,2],[37,11,93,9,"currentDate"],[37,22,93,20],[37,23,93,21,"getTime"],[37,30,93,9],[37,36,93,34,"endTime"],[37,43,93,2],[37,45,93,43],[38,0,94,4,"dates"],[38,6,94,4,"dates"],[38,11,94,9],[38,12,94,10,"push"],[38,16,94,4],[38,17,94,15],[38,18,94,16],[38,21,94,19,"_index"],[38,27,94,25],[38,28,94,26,"default"],[38,35,94,15],[38,37,94,35,"currentDate"],[38,48,94,15],[38,49,94,4],[39,0,95,4,"currentDate"],[39,6,95,4,"currentDate"],[39,17,95,15],[39,18,95,16,"setDate"],[39,25,95,4],[39,26,95,24,"currentDate"],[39,37,95,35],[39,38,95,36,"getDate"],[39,45,95,24],[39,50,95,48,"step"],[39,54,95,4],[40,0,96,4,"currentDate"],[40,6,96,4,"currentDate"],[40,17,96,15],[40,18,96,16,"setHours"],[40,26,96,4],[40,27,96,25],[40,28,96,4],[40,30,96,28],[40,31,96,4],[40,33,96,31],[40,34,96,4],[40,36,96,34],[40,37,96,4],[41,0,97,3],[43,0,99,2],[43,11,99,9,"dates"],[43,16,99,2],[44,0,100,1],[46,0,102,0,"module"],[46,2,102,0,"module"],[46,8,102,6],[46,9,102,7,"exports"],[46,16,102,0],[46,19,102,17,"exports"],[46,26,102,24],[46,27,102,25,"default"],[46,34,102,0]]},"type":"js/module"}]}