{"dependencies":[{"name":"../toDate/index.js","data":{"isAsync":false}},{"name":"../_lib/toInteger/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = roundToNearestMinutes;\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../toDate/index.js\"));\n\n  var _index2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../_lib/toInteger/index.js\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function roundToNearestMinutes(dirtyDate, options) {\n    if (arguments.length < 1) {\n      throw new TypeError('1 argument required, but only none provided present');\n    }\n\n    var nearestTo = options && 'nearestTo' in options ? (0, _index2.default)(options.nearestTo) : 1;\n\n    if (nearestTo < 1 || nearestTo > 30) {\n      throw new RangeError('`options.nearestTo` must be between 1 and 30');\n    }\n\n    var date = (0, _index.default)(dirtyDate);\n    var seconds = date.getSeconds();\n    var minutes = date.getMinutes() + seconds / 60;\n    var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n    var remainderMinutes = minutes % nearestTo;\n    var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"roundToNearestMinutes"],[7,41,6,0],[9,0,8,0],[9,6,8,4,"_index"],[9,12,8,10],[9,15,8,13,"_interopRequireDefault"],[9,37,8,35],[9,38,8,36,"require"],[9,49,8,43],[9,90,8,35],[9,91,8,0],[11,0,10,0],[11,6,10,4,"_index2"],[11,13,10,11],[11,16,10,14,"_interopRequireDefault"],[11,38,10,36],[11,39,10,37,"require"],[11,50,10,44],[11,99,10,36],[11,100,10,0],[13,0,12,0],[13,11,12,9,"_interopRequireDefault"],[13,33,12,0],[13,34,12,32,"obj"],[13,37,12,0],[13,39,12,37],[14,0,12,39],[14,11,12,46,"obj"],[14,14,12,49],[14,18,12,53,"obj"],[14,21,12,56],[14,22,12,57,"__esModule"],[14,32,12,46],[14,35,12,70,"obj"],[14,38,12,46],[14,41,12,76],[15,0,12,78,"default"],[15,6,12,78,"default"],[15,13,12,85],[15,15,12,87,"obj"],[16,0,12,76],[16,5,12,39],[17,0,12,95],[19,0,38,0],[19,11,38,9,"roundToNearestMinutes"],[19,32,38,0],[19,33,38,31,"dirtyDate"],[19,42,38,0],[19,44,38,42,"options"],[19,51,38,0],[19,53,38,51],[20,0,39,2],[20,8,39,6,"arguments"],[20,17,39,15],[20,18,39,16,"length"],[20,24,39,6],[20,27,39,25],[20,28,39,2],[20,30,39,28],[21,0,40,4],[21,12,40,10],[21,16,40,14,"TypeError"],[21,25,40,10],[21,26,40,24],[21,79,40,10],[21,80,40,4],[22,0,41,3],[24,0,43,2],[24,8,43,6,"nearestTo"],[24,17,43,15],[24,20,43,18,"options"],[24,27,43,25],[24,31,43,29],[24,46,43,44,"options"],[24,53,43,18],[24,56,43,54],[24,57,43,55],[24,60,43,58,"_index2"],[24,67,43,65],[24,68,43,66,"default"],[24,75,43,54],[24,77,43,75,"options"],[24,84,43,82],[24,85,43,83,"nearestTo"],[24,94,43,54],[24,95,43,18],[24,98,43,96],[24,99,43,2],[26,0,45,2],[26,8,45,6,"nearestTo"],[26,17,45,15],[26,20,45,18],[26,21,45,6],[26,25,45,23,"nearestTo"],[26,34,45,32],[26,37,45,35],[26,39,45,2],[26,41,45,39],[27,0,46,4],[27,12,46,10],[27,16,46,14,"RangeError"],[27,26,46,10],[27,27,46,25],[27,73,46,10],[27,74,46,4],[28,0,47,3],[30,0,49,2],[30,8,49,6,"date"],[30,12,49,10],[30,15,49,13],[30,16,49,14],[30,19,49,17,"_index"],[30,25,49,23],[30,26,49,24,"default"],[30,33,49,13],[30,35,49,33,"dirtyDate"],[30,44,49,13],[30,45,49,2],[31,0,50,2],[31,8,50,6,"seconds"],[31,15,50,13],[31,18,50,16,"date"],[31,22,50,20],[31,23,50,21,"getSeconds"],[31,33,50,16],[31,35,50,2],[32,0,52,2],[32,8,52,6,"minutes"],[32,15,52,13],[32,18,52,16,"date"],[32,22,52,20],[32,23,52,21,"getMinutes"],[32,33,52,16],[32,38,52,36,"seconds"],[32,45,52,43],[32,48,52,46],[32,50,52,2],[33,0,53,2],[33,8,53,6,"roundedMinutes"],[33,22,53,20],[33,25,53,23,"Math"],[33,29,53,27],[33,30,53,28,"floor"],[33,35,53,23],[33,36,53,34,"minutes"],[33,43,53,41],[33,46,53,44,"nearestTo"],[33,55,53,23],[33,59,53,57,"nearestTo"],[33,68,53,2],[34,0,54,2],[34,8,54,6,"remainderMinutes"],[34,24,54,22],[34,27,54,25,"minutes"],[34,34,54,32],[34,37,54,35,"nearestTo"],[34,46,54,2],[35,0,55,2],[35,8,55,6,"addedMinutes"],[35,20,55,18],[35,23,55,21,"Math"],[35,27,55,25],[35,28,55,26,"round"],[35,33,55,21],[35,34,55,32,"remainderMinutes"],[35,50,55,48],[35,53,55,51,"nearestTo"],[35,62,55,21],[35,66,55,64,"nearestTo"],[35,75,55,2],[36,0,56,2],[36,11,56,9],[36,15,56,13,"Date"],[36,19,56,9],[36,20,56,18,"date"],[36,24,56,22],[36,25,56,23,"getFullYear"],[36,36,56,18],[36,38,56,9],[36,40,56,38,"date"],[36,44,56,42],[36,45,56,43,"getMonth"],[36,53,56,38],[36,55,56,9],[36,57,56,55,"date"],[36,61,56,59],[36,62,56,60,"getDate"],[36,69,56,55],[36,71,56,9],[36,73,56,71,"date"],[36,77,56,75],[36,78,56,76,"getHours"],[36,86,56,71],[36,88,56,9],[36,90,56,88,"roundedMinutes"],[36,104,56,102],[36,107,56,105,"addedMinutes"],[36,119,56,9],[36,120,56,2],[37,0,57,1],[39,0,59,0,"module"],[39,2,59,0,"module"],[39,8,59,6],[39,9,59,7,"exports"],[39,16,59,0],[39,19,59,17,"exports"],[39,26,59,24],[39,27,59,25,"default"],[39,34,59,0]]},"type":"js/module"}]}