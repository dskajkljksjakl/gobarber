{"dependencies":[{"name":"./constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.__esModule = true;\n  exports.default = createPersistoid;\n\n  var _constants = _$$_REQUIRE(_dependencyMap[0], \"./constants\");\n\n  function createPersistoid(config) {\n    var blacklist = config.blacklist || null;\n    var whitelist = config.whitelist || null;\n    var transforms = config.transforms || [];\n    var throttle = config.throttle || 0;\n    var storageKey = '' + (config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX) + config.key;\n    var storage = config.storage;\n    var serialize = config.serialize === false ? function (x) {\n      return x;\n    } : defaultSerialize;\n    var lastState = {};\n    var stagedState = {};\n    var keysToProcess = [];\n    var timeIterator = null;\n    var writePromise = null;\n\n    var update = function update(state) {\n      Object.keys(state).forEach(function (key) {\n        var subState = state[key];\n        if (!passWhitelistBlacklist(key)) return;\n        if (lastState[key] === state[key]) return;\n        if (keysToProcess.indexOf(key) !== -1) return;\n        keysToProcess.push(key);\n      });\n\n      if (timeIterator === null) {\n        timeIterator = setInterval(processNextKey, throttle);\n      }\n\n      lastState = state;\n    };\n\n    function processNextKey() {\n      if (keysToProcess.length === 0) {\n        if (timeIterator) clearInterval(timeIterator);\n        timeIterator = null;\n        return;\n      }\n\n      var key = keysToProcess.shift();\n      var endState = transforms.reduce(function (subState, transformer) {\n        return transformer.in(subState, key, lastState);\n      }, lastState[key]);\n      if (typeof endState !== 'undefined') stagedWrite(key, endState);\n    }\n\n    function stagedWrite(key, endState) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('redux-persist/createPersistoid: error serializing state', err);\n      }\n\n      if (keysToProcess.length === 0) {\n        Object.keys(stagedState).forEach(function (key) {\n          if (lastState[key] === undefined) {\n            delete stagedState[key];\n          }\n        });\n        writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n      }\n    }\n\n    function passWhitelistBlacklist(key) {\n      if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n      if (blacklist && blacklist.indexOf(key) !== -1) return false;\n      return true;\n    }\n\n    function onWriteFail(err) {\n      if (err && process.env.NODE_ENV !== 'production') {\n        console.error('Error storing data', err);\n      }\n    }\n\n    var flush = function flush() {\n      while (keysToProcess.length !== 0) {\n        processNextKey();\n      }\n\n      return writePromise || Promise.resolve();\n    };\n\n    return {\n      update: update,\n      flush: flush\n    };\n  }\n\n  function defaultSerialize(data) {\n    return JSON.stringify(data);\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"exports"],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"__esModule"],[4,20,3,0],[4,23,3,21],[4,27,3,0],[5,0,4,0,"exports"],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"default"],[5,17,4,0],[5,20,4,18,"createPersistoid"],[5,36,4,0],[7,0,6,0],[7,6,6,4,"_constants"],[7,16,6,14],[7,19,6,17,"require"],[7,30,6,24],[7,64,6,0],[9,0,10,0],[9,11,10,9,"createPersistoid"],[9,27,10,0],[9,28,10,26,"config"],[9,34,10,0],[9,36,10,34],[10,0,12,2],[10,8,12,6,"blacklist"],[10,17,12,15],[10,20,12,18,"config"],[10,26,12,24],[10,27,12,25,"blacklist"],[10,36,12,18],[10,40,12,38],[10,44,12,2],[11,0,13,2],[11,8,13,6,"whitelist"],[11,17,13,15],[11,20,13,18,"config"],[11,26,13,24],[11,27,13,25,"whitelist"],[11,36,13,18],[11,40,13,38],[11,44,13,2],[12,0,14,2],[12,8,14,6,"transforms"],[12,18,14,16],[12,21,14,19,"config"],[12,27,14,25],[12,28,14,26,"transforms"],[12,38,14,19],[12,42,14,40],[12,44,14,2],[13,0,15,2],[13,8,15,6,"throttle"],[13,16,15,14],[13,19,15,17,"config"],[13,25,15,23],[13,26,15,24,"throttle"],[13,34,15,17],[13,38,15,36],[13,39,15,2],[14,0,16,2],[14,8,16,6,"storageKey"],[14,18,16,16],[14,21,16,19],[14,27,16,25,"config"],[14,33,16,31],[14,34,16,32,"keyPrefix"],[14,43,16,25],[14,48,16,46,"undefined"],[14,57,16,25],[14,60,16,58,"config"],[14,66,16,64],[14,67,16,65,"keyPrefix"],[14,76,16,25],[14,79,16,77,"_constants"],[14,89,16,87],[14,90,16,88,"KEY_PREFIX"],[14,100,16,19],[14,104,16,102,"config"],[14,110,16,108],[14,111,16,109,"key"],[14,114,16,2],[15,0,17,2],[15,8,17,6,"storage"],[15,15,17,13],[15,18,17,16,"config"],[15,24,17,22],[15,25,17,23,"storage"],[15,32,17,2],[16,0,18,2],[16,8,18,6,"serialize"],[16,17,18,15],[16,20,18,18,"config"],[16,26,18,24],[16,27,18,25,"serialize"],[16,36,18,18],[16,41,18,39],[16,46,18,18],[16,49,18,47],[16,59,18,57,"x"],[16,60,18,47],[16,62,18,60],[17,0,19,4],[17,13,19,11,"x"],[17,14,19,4],[18,0,20,3],[18,5,18,18],[18,8,20,6,"defaultSerialize"],[18,24,18,2],[19,0,23,2],[19,8,23,6,"lastState"],[19,17,23,15],[19,20,23,18],[19,22,23,2],[20,0,24,2],[20,8,24,6,"stagedState"],[20,19,24,17],[20,22,24,20],[20,24,24,2],[21,0,25,2],[21,8,25,6,"keysToProcess"],[21,21,25,19],[21,24,25,22],[21,26,25,2],[22,0,26,2],[22,8,26,6,"timeIterator"],[22,20,26,18],[22,23,26,21],[22,27,26,2],[23,0,27,2],[23,8,27,6,"writePromise"],[23,20,27,18],[23,23,27,21],[23,27,27,2],[25,0,29,2],[25,8,29,6,"update"],[25,14,29,12],[25,17,29,15],[25,26,29,24,"update"],[25,32,29,15],[25,33,29,31,"state"],[25,38,29,15],[25,40,29,38],[26,0,31,4,"Object"],[26,6,31,4,"Object"],[26,12,31,10],[26,13,31,11,"keys"],[26,17,31,4],[26,18,31,16,"state"],[26,23,31,4],[26,25,31,23,"forEach"],[26,32,31,4],[26,33,31,31],[26,43,31,41,"key"],[26,46,31,31],[26,48,31,46],[27,0,32,6],[27,12,32,10,"subState"],[27,20,32,18],[27,23,32,21,"state"],[27,28,32,26],[27,29,32,27,"key"],[27,32,32,26],[27,33,32,6],[28,0,33,6],[28,12,33,10],[28,13,33,11,"passWhitelistBlacklist"],[28,35,33,33],[28,36,33,34,"key"],[28,39,33,33],[28,40,33,6],[28,42,33,40],[29,0,34,6],[29,12,34,10,"lastState"],[29,21,34,19],[29,22,34,20,"key"],[29,25,34,19],[29,26,34,10],[29,31,34,29,"state"],[29,36,34,34],[29,37,34,35,"key"],[29,40,34,34],[29,41,34,6],[29,43,34,41],[30,0,35,6],[30,12,35,10,"keysToProcess"],[30,25,35,23],[30,26,35,24,"indexOf"],[30,33,35,10],[30,34,35,32,"key"],[30,37,35,10],[30,43,35,41],[30,44,35,42],[30,45,35,6],[30,47,35,45],[31,0,36,6,"keysToProcess"],[31,8,36,6,"keysToProcess"],[31,21,36,19],[31,22,36,20,"push"],[31,26,36,6],[31,27,36,25,"key"],[31,30,36,6],[32,0,37,5],[32,7,31,4],[34,0,40,4],[34,10,40,8,"timeIterator"],[34,22,40,20],[34,27,40,25],[34,31,40,4],[34,33,40,31],[35,0,41,6,"timeIterator"],[35,8,41,6,"timeIterator"],[35,20,41,18],[35,23,41,21,"setInterval"],[35,34,41,32],[35,35,41,33,"processNextKey"],[35,49,41,32],[35,51,41,49,"throttle"],[35,59,41,32],[35,60,41,6],[36,0,42,5],[38,0,44,4,"lastState"],[38,6,44,4,"lastState"],[38,15,44,13],[38,18,44,16,"state"],[38,23,44,4],[39,0,45,3],[39,5,29,2],[41,0,47,2],[41,13,47,11,"processNextKey"],[41,27,47,2],[41,30,47,28],[42,0,48,4],[42,10,48,8,"keysToProcess"],[42,23,48,21],[42,24,48,22,"length"],[42,30,48,8],[42,35,48,33],[42,36,48,4],[42,38,48,36],[43,0,49,6],[43,12,49,10,"timeIterator"],[43,24,49,6],[43,26,49,24,"clearInterval"],[43,39,49,37],[43,40,49,38,"timeIterator"],[43,52,49,37],[43,53,49,24],[44,0,50,6,"timeIterator"],[44,8,50,6,"timeIterator"],[44,20,50,18],[44,23,50,21],[44,27,50,6],[45,0,51,6],[46,0,52,5],[48,0,54,4],[48,10,54,8,"key"],[48,13,54,11],[48,16,54,14,"keysToProcess"],[48,29,54,27],[48,30,54,28,"shift"],[48,35,54,14],[48,37,54,4],[49,0,55,4],[49,10,55,8,"endState"],[49,18,55,16],[49,21,55,19,"transforms"],[49,31,55,29],[49,32,55,30,"reduce"],[49,38,55,19],[49,39,55,37],[49,49,55,47,"subState"],[49,57,55,37],[49,59,55,57,"transformer"],[49,70,55,37],[49,72,55,70],[50,0,56,6],[50,15,56,13,"transformer"],[50,26,56,24],[50,27,56,25,"in"],[50,29,56,13],[50,30,56,28,"subState"],[50,38,56,13],[50,40,56,38,"key"],[50,43,56,13],[50,45,56,43,"lastState"],[50,54,56,13],[50,55,56,6],[51,0,57,5],[51,7,55,19],[51,9,57,7,"lastState"],[51,18,57,16],[51,19,57,17,"key"],[51,22,57,16],[51,23,55,19],[51,24,55,4],[52,0,58,4],[52,10,58,8],[52,17,58,15,"endState"],[52,25,58,8],[52,30,58,28],[52,41,58,4],[52,43,58,41,"stagedWrite"],[52,54,58,52],[52,55,58,53,"key"],[52,58,58,52],[52,60,58,58,"endState"],[52,68,58,52],[52,69,58,41],[53,0,59,3],[55,0,61,2],[55,13,61,11,"stagedWrite"],[55,24,61,2],[55,25,61,23,"key"],[55,28,61,2],[55,30,61,28,"endState"],[55,38,61,2],[55,40,61,38],[56,0,62,4],[56,10,62,8],[57,0,63,6,"stagedState"],[57,8,63,6,"stagedState"],[57,19,63,17],[57,20,63,18,"key"],[57,23,63,17],[57,24,63,6],[57,27,63,25,"serialize"],[57,36,63,34],[57,37,63,35,"endState"],[57,45,63,34],[57,46,63,6],[58,0,64,5],[58,7,62,4],[58,8,64,6],[58,15,64,13,"err"],[58,18,64,6],[58,20,64,18],[59,0,65,6,"console"],[59,8,65,6,"console"],[59,15,65,13],[59,16,65,14,"error"],[59,21,65,6],[59,22,65,20],[59,79,65,6],[59,81,65,79,"err"],[59,84,65,6],[60,0,66,5],[62,0,67,4],[62,10,67,8,"keysToProcess"],[62,23,67,21],[62,24,67,22,"length"],[62,30,67,8],[62,35,67,33],[62,36,67,4],[62,38,67,36],[63,0,69,6,"Object"],[63,8,69,6,"Object"],[63,14,69,12],[63,15,69,13,"keys"],[63,19,69,6],[63,20,69,18,"stagedState"],[63,31,69,6],[63,33,69,31,"forEach"],[63,40,69,6],[63,41,69,39],[63,51,69,49,"key"],[63,54,69,39],[63,56,69,54],[64,0,70,8],[64,14,70,12,"lastState"],[64,23,70,21],[64,24,70,22,"key"],[64,27,70,21],[64,28,70,12],[64,33,70,31,"undefined"],[64,42,70,8],[64,44,70,42],[65,0,71,10],[65,19,71,17,"stagedState"],[65,30,71,28],[65,31,71,29,"key"],[65,34,71,28],[65,35,71,10],[66,0,72,9],[67,0,73,7],[67,9,69,6],[68,0,75,6,"writePromise"],[68,8,75,6,"writePromise"],[68,20,75,18],[68,23,75,21,"storage"],[68,30,75,28],[68,31,75,29,"setItem"],[68,38,75,21],[68,39,75,37,"storageKey"],[68,49,75,21],[68,51,75,49,"serialize"],[68,60,75,58],[68,61,75,59,"stagedState"],[68,72,75,58],[68,73,75,21],[68,75,75,73,"catch"],[68,80,75,21],[68,81,75,79,"onWriteFail"],[68,92,75,21],[68,93,75,6],[69,0,76,5],[70,0,77,3],[72,0,79,2],[72,13,79,11,"passWhitelistBlacklist"],[72,35,79,2],[72,36,79,34,"key"],[72,39,79,2],[72,41,79,39],[73,0,80,4],[73,10,80,8,"whitelist"],[73,19,80,17],[73,23,80,21,"whitelist"],[73,32,80,30],[73,33,80,31,"indexOf"],[73,40,80,21],[73,41,80,39,"key"],[73,44,80,21],[73,50,80,48],[73,51,80,49],[73,52,80,8],[73,56,80,54,"key"],[73,59,80,57],[73,64,80,62],[73,74,80,4],[73,76,80,74],[73,83,80,81],[73,88,80,74],[74,0,81,4],[74,10,81,8,"blacklist"],[74,19,81,17],[74,23,81,21,"blacklist"],[74,32,81,30],[74,33,81,31,"indexOf"],[74,40,81,21],[74,41,81,39,"key"],[74,44,81,21],[74,50,81,48],[74,51,81,49],[74,52,81,4],[74,54,81,52],[74,61,81,59],[74,66,81,52],[75,0,82,4],[75,13,82,11],[75,17,82,4],[76,0,83,3],[78,0,85,2],[78,13,85,11,"onWriteFail"],[78,24,85,2],[78,25,85,23,"err"],[78,28,85,2],[78,30,85,28],[79,0,87,4],[79,10,87,8,"err"],[79,13,87,11],[79,17,87,15,"process"],[79,24,87,22],[79,25,87,23,"env"],[79,28,87,15],[79,29,87,27,"NODE_ENV"],[79,37,87,15],[79,42,87,40],[79,54,87,4],[79,56,87,54],[80,0,88,6,"console"],[80,8,88,6,"console"],[80,15,88,13],[80,16,88,14,"error"],[80,21,88,6],[80,22,88,20],[80,42,88,6],[80,44,88,42,"err"],[80,47,88,6],[81,0,89,5],[82,0,90,3],[84,0,92,2],[84,8,92,6,"flush"],[84,13,92,11],[84,16,92,14],[84,25,92,23,"flush"],[84,30,92,14],[84,33,92,31],[85,0,93,4],[85,13,93,11,"keysToProcess"],[85,26,93,24],[85,27,93,25,"length"],[85,33,93,11],[85,38,93,36],[85,39,93,4],[85,41,93,39],[86,0,94,6,"processNextKey"],[86,8,94,6,"processNextKey"],[86,22,94,20],[87,0,95,5],[89,0,96,4],[89,13,96,11,"writePromise"],[89,25,96,23],[89,29,96,27,"Promise"],[89,36,96,34],[89,37,96,35,"resolve"],[89,44,96,27],[89,46,96,4],[90,0,97,3],[90,5,92,2],[92,0,100,2],[92,11,100,9],[93,0,101,4,"update"],[93,6,101,4,"update"],[93,12,101,10],[93,14,101,12,"update"],[93,20,100,9],[94,0,102,4,"flush"],[94,6,102,4,"flush"],[94,11,102,9],[94,13,102,11,"flush"],[95,0,100,9],[95,5,100,2],[96,0,104,1],[98,0,109,0],[98,11,109,9,"defaultSerialize"],[98,27,109,0],[98,28,109,26,"data"],[98,32,109,0],[98,34,109,32],[99,0,110,2],[99,11,110,9,"JSON"],[99,15,110,13],[99,16,110,14,"stringify"],[99,25,110,9],[99,26,110,24,"data"],[99,30,110,9],[99,31,110,2],[100,0,111,1]]},"type":"js/module"}]}