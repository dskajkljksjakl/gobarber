{"dependencies":[{"name":"../toDate/index.js","data":{"isAsync":false}},{"name":"../_lib/format/lightFormatters/index.js","data":{"isAsync":false}},{"name":"../_lib/getTimezoneOffsetInMilliseconds/index.js","data":{"isAsync":false}},{"name":"../isValid/index.js","data":{"isAsync":false}},{"name":"../subMilliseconds/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = lightFormat;\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../toDate/index.js\"));\n\n  var _index2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../_lib/format/lightFormatters/index.js\"));\n\n  var _index3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\n  var _index4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../isValid/index.js\"));\n\n  var _index5 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../subMilliseconds/index.js\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n  var escapedStringRegExp = /^'([^]*?)'?$/;\n  var doubleQuoteRegExp = /''/g;\n  var unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n  function lightFormat(dirtyDate, dirtyFormatStr) {\n    if (arguments.length < 2) {\n      throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n\n    var formatStr = String(dirtyFormatStr);\n    var originalDate = (0, _index.default)(dirtyDate);\n\n    if (!(0, _index4.default)(originalDate)) {\n      throw new RangeError('Invalid time value');\n    }\n\n    var timezoneOffset = (0, _index3.default)(originalDate);\n    var utcDate = (0, _index5.default)(originalDate, timezoneOffset);\n    var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      var firstCharacter = substring[0];\n\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      var formatter = _index2.default[firstCharacter];\n\n      if (formatter) {\n        return formatter(utcDate, substring, null, {});\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      }\n\n      return substring;\n    }).join('');\n    return result;\n  }\n\n  function cleanEscapedString(input) {\n    return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"lightFormat"],[7,31,6,0],[9,0,8,0],[9,6,8,4,"_index"],[9,12,8,10],[9,15,8,13,"_interopRequireDefault"],[9,37,8,35],[9,38,8,36,"require"],[9,49,8,43],[9,90,8,35],[9,91,8,0],[11,0,10,0],[11,6,10,4,"_index2"],[11,13,10,11],[11,16,10,14,"_interopRequireDefault"],[11,38,10,36],[11,39,10,37,"require"],[11,50,10,44],[11,112,10,36],[11,113,10,0],[13,0,12,0],[13,6,12,4,"_index3"],[13,13,12,11],[13,16,12,14,"_interopRequireDefault"],[13,38,12,36],[13,39,12,37,"require"],[13,50,12,44],[13,121,12,36],[13,122,12,0],[15,0,14,0],[15,6,14,4,"_index4"],[15,13,14,11],[15,16,14,14,"_interopRequireDefault"],[15,38,14,36],[15,39,14,37,"require"],[15,50,14,44],[15,92,14,36],[15,93,14,0],[17,0,16,0],[17,6,16,4,"_index5"],[17,13,16,11],[17,16,16,14,"_interopRequireDefault"],[17,38,16,36],[17,39,16,37,"require"],[17,50,16,44],[17,100,16,36],[17,101,16,0],[19,0,18,0],[19,11,18,9,"_interopRequireDefault"],[19,33,18,0],[19,34,18,32,"obj"],[19,37,18,0],[19,39,18,37],[20,0,18,39],[20,11,18,46,"obj"],[20,14,18,49],[20,18,18,53,"obj"],[20,21,18,56],[20,22,18,57,"__esModule"],[20,32,18,46],[20,35,18,70,"obj"],[20,38,18,46],[20,41,18,76],[21,0,18,78,"default"],[21,6,18,78,"default"],[21,13,18,85],[21,15,18,87,"obj"],[22,0,18,76],[22,5,18,39],[23,0,18,95],[25,0,29,0],[25,6,29,4,"formattingTokensRegExp"],[25,28,29,26],[25,31,29,29],[25,63,29,0],[26,0,30,0],[26,6,30,4,"escapedStringRegExp"],[26,25,30,23],[26,28,30,26],[26,42,30,0],[27,0,31,0],[27,6,31,4,"doubleQuoteRegExp"],[27,23,31,21],[27,26,31,24],[27,31,31,0],[28,0,32,0],[28,6,32,4,"unescapedLatinCharacterRegExp"],[28,35,32,33],[28,38,32,36],[28,48,32,0],[30,0,89,0],[30,11,89,9,"lightFormat"],[30,22,89,0],[30,23,89,21,"dirtyDate"],[30,32,89,0],[30,34,89,32,"dirtyFormatStr"],[30,48,89,0],[30,50,89,48],[31,0,90,2],[31,8,90,6,"arguments"],[31,17,90,15],[31,18,90,16,"length"],[31,24,90,6],[31,27,90,25],[31,28,90,2],[31,30,90,28],[32,0,91,4],[32,12,91,10],[32,16,91,14,"TypeError"],[32,25,91,10],[32,26,91,24],[32,62,91,60,"arguments"],[32,71,91,69],[32,72,91,70,"length"],[32,78,91,24],[32,81,91,79],[32,91,91,10],[32,92,91,4],[33,0,92,3],[35,0,94,2],[35,8,94,6,"formatStr"],[35,17,94,15],[35,20,94,18,"String"],[35,26,94,24],[35,27,94,25,"dirtyFormatStr"],[35,41,94,24],[35,42,94,2],[36,0,95,2],[36,8,95,6,"originalDate"],[36,20,95,18],[36,23,95,21],[36,24,95,22],[36,27,95,25,"_index"],[36,33,95,31],[36,34,95,32,"default"],[36,41,95,21],[36,43,95,41,"dirtyDate"],[36,52,95,21],[36,53,95,2],[38,0,97,2],[38,8,97,6],[38,9,97,7],[38,10,97,8],[38,13,97,11,"_index4"],[38,20,97,18],[38,21,97,19,"default"],[38,28,97,7],[38,30,97,28,"originalDate"],[38,42,97,7],[38,43,97,2],[38,45,97,43],[39,0,98,4],[39,12,98,10],[39,16,98,14,"RangeError"],[39,26,98,10],[39,27,98,25],[39,47,98,10],[39,48,98,4],[40,0,99,3],[42,0,104,2],[42,8,104,6,"timezoneOffset"],[42,22,104,20],[42,25,104,23],[42,26,104,24],[42,29,104,27,"_index3"],[42,36,104,34],[42,37,104,35,"default"],[42,44,104,23],[42,46,104,44,"originalDate"],[42,58,104,23],[42,59,104,2],[43,0,105,2],[43,8,105,6,"utcDate"],[43,15,105,13],[43,18,105,16],[43,19,105,17],[43,22,105,20,"_index5"],[43,29,105,27],[43,30,105,28,"default"],[43,37,105,16],[43,39,105,37,"originalDate"],[43,51,105,16],[43,53,105,51,"timezoneOffset"],[43,67,105,16],[43,68,105,2],[44,0,106,2],[44,8,106,6,"result"],[44,14,106,12],[44,17,106,15,"formatStr"],[44,26,106,24],[44,27,106,25,"match"],[44,32,106,15],[44,33,106,31,"formattingTokensRegExp"],[44,55,106,15],[44,57,106,55,"map"],[44,60,106,15],[44,61,106,59],[44,71,106,69,"substring"],[44,80,106,59],[44,82,106,80],[45,0,108,4],[45,10,108,8,"substring"],[45,19,108,17],[45,24,108,22],[45,28,108,4],[45,30,108,28],[46,0,109,6],[46,15,109,13],[46,18,109,6],[47,0,110,5],[49,0,112,4],[49,10,112,8,"firstCharacter"],[49,24,112,22],[49,27,112,25,"substring"],[49,36,112,34],[49,37,112,35],[49,38,112,34],[49,39,112,4],[51,0,114,4],[51,10,114,8,"firstCharacter"],[51,24,114,22],[51,29,114,27],[51,32,114,4],[51,34,114,32],[52,0,115,6],[52,15,115,13,"cleanEscapedString"],[52,33,115,31],[52,34,115,32,"substring"],[52,43,115,31],[52,44,115,6],[53,0,116,5],[55,0,118,4],[55,10,118,8,"formatter"],[55,19,118,17],[55,22,118,20,"_index2"],[55,29,118,27],[55,30,118,28,"default"],[55,37,118,20],[55,38,118,36,"firstCharacter"],[55,52,118,20],[55,53,118,4],[57,0,120,4],[57,10,120,8,"formatter"],[57,19,120,4],[57,21,120,19],[58,0,121,6],[58,15,121,13,"formatter"],[58,24,121,22],[58,25,121,23,"utcDate"],[58,32,121,22],[58,34,121,32,"substring"],[58,43,121,22],[58,45,121,43],[58,49,121,22],[58,51,121,49],[58,53,121,22],[58,54,121,6],[59,0,122,5],[61,0,124,4],[61,10,124,8,"firstCharacter"],[61,24,124,22],[61,25,124,23,"match"],[61,30,124,8],[61,31,124,29,"unescapedLatinCharacterRegExp"],[61,60,124,8],[61,61,124,4],[61,63,124,61],[62,0,125,6],[62,14,125,12],[62,18,125,16,"RangeError"],[62,28,125,12],[62,29,125,27],[62,96,125,94,"firstCharacter"],[62,110,125,27],[62,113,125,111],[62,116,125,12],[62,117,125,6],[63,0,126,5],[65,0,128,4],[65,13,128,11,"substring"],[65,22,128,4],[66,0,129,3],[66,5,106,15],[66,7,129,5,"join"],[66,11,106,15],[66,12,129,10],[66,14,106,15],[66,15,106,2],[67,0,130,2],[67,11,130,9,"result"],[67,17,130,2],[68,0,131,1],[70,0,133,0],[70,11,133,9,"cleanEscapedString"],[70,29,133,0],[70,30,133,28,"input"],[70,35,133,0],[70,37,133,35],[71,0,134,2],[71,11,134,9,"input"],[71,16,134,14],[71,17,134,15,"match"],[71,22,134,9],[71,23,134,21,"escapedStringRegExp"],[71,42,134,9],[71,44,134,42],[71,45,134,9],[71,47,134,45,"replace"],[71,54,134,9],[71,55,134,53,"doubleQuoteRegExp"],[71,72,134,9],[71,74,134,72],[71,77,134,9],[71,78,134,2],[72,0,135,1],[74,0,137,0,"module"],[74,2,137,0,"module"],[74,8,137,6],[74,9,137,7,"exports"],[74,16,137,0],[74,19,137,17,"exports"],[74,26,137,24],[74,27,137,25,"default"],[74,34,137,0]]},"type":"js/module"}]}