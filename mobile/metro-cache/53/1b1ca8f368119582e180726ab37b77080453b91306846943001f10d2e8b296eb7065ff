{"dependencies":[{"name":"../toDate/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = closestTo;\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../toDate/index.js\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n    if (arguments.length < 2) {\n      throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n\n    var dateToCompare = (0, _index.default)(dirtyDateToCompare);\n\n    if (isNaN(dateToCompare)) {\n      return new Date(NaN);\n    }\n\n    var timeToCompare = dateToCompare.getTime();\n    var datesArray;\n\n    if (dirtyDatesArray == null) {\n      datesArray = [];\n    } else if (typeof dirtyDatesArray.forEach === 'function') {\n      datesArray = dirtyDatesArray;\n    } else {\n      datesArray = Array.prototype.slice.call(dirtyDatesArray);\n    }\n\n    var result;\n    var minDistance;\n    datesArray.forEach(function (dirtyDate) {\n      var currentDate = (0, _index.default)(dirtyDate);\n\n      if (isNaN(currentDate)) {\n        result = new Date(NaN);\n        minDistance = NaN;\n        return;\n      }\n\n      var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n      if (result == null || distance < minDistance) {\n        result = currentDate;\n        minDistance = distance;\n      }\n    });\n    return result;\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"closestTo"],[7,29,6,0],[9,0,8,0],[9,6,8,4,"_index"],[9,12,8,10],[9,15,8,13,"_interopRequireDefault"],[9,37,8,35],[9,38,8,36,"require"],[9,49,8,43],[9,90,8,35],[9,91,8,0],[11,0,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,0],[11,34,10,32,"obj"],[11,37,10,0],[11,39,10,37],[12,0,10,39],[12,11,10,46,"obj"],[12,14,10,49],[12,18,10,53,"obj"],[12,21,10,56],[12,22,10,57,"__esModule"],[12,32,10,46],[12,35,10,70,"obj"],[12,38,10,46],[12,41,10,76],[13,0,10,78,"default"],[13,6,10,78,"default"],[13,13,10,85],[13,15,10,87,"obj"],[14,0,10,76],[14,5,10,39],[15,0,10,95],[17,0,41,0],[17,11,41,9,"closestTo"],[17,20,41,0],[17,21,41,19,"dirtyDateToCompare"],[17,39,41,0],[17,41,41,39,"dirtyDatesArray"],[17,56,41,0],[17,58,41,56],[18,0,42,2],[18,8,42,6,"arguments"],[18,17,42,15],[18,18,42,16,"length"],[18,24,42,6],[18,27,42,25],[18,28,42,2],[18,30,42,28],[19,0,43,4],[19,12,43,10],[19,16,43,14,"TypeError"],[19,25,43,10],[19,26,43,24],[19,62,43,60,"arguments"],[19,71,43,69],[19,72,43,70,"length"],[19,78,43,24],[19,81,43,79],[19,91,43,10],[19,92,43,4],[20,0,44,3],[22,0,46,2],[22,8,46,6,"dateToCompare"],[22,21,46,19],[22,24,46,22],[22,25,46,23],[22,28,46,26,"_index"],[22,34,46,32],[22,35,46,33,"default"],[22,42,46,22],[22,44,46,42,"dirtyDateToCompare"],[22,62,46,22],[22,63,46,2],[24,0,48,2],[24,8,48,6,"isNaN"],[24,13,48,11],[24,14,48,12,"dateToCompare"],[24,27,48,11],[24,28,48,2],[24,30,48,28],[25,0,49,4],[25,13,49,11],[25,17,49,15,"Date"],[25,21,49,11],[25,22,49,20,"NaN"],[25,25,49,11],[25,26,49,4],[26,0,50,3],[28,0,52,2],[28,8,52,6,"timeToCompare"],[28,21,52,19],[28,24,52,22,"dateToCompare"],[28,37,52,35],[28,38,52,36,"getTime"],[28,45,52,22],[28,47,52,2],[29,0,53,2],[29,8,53,6,"datesArray"],[29,18,53,2],[31,0,55,2],[31,8,55,6,"dirtyDatesArray"],[31,23,55,21],[31,27,55,25],[31,31,55,2],[31,33,55,31],[32,0,56,4,"datesArray"],[32,6,56,4,"datesArray"],[32,16,56,14],[32,19,56,17],[32,21,56,4],[33,0,57,3],[33,5,55,2],[33,11,57,9],[33,15,57,13],[33,22,57,20,"dirtyDatesArray"],[33,37,57,35],[33,38,57,36,"forEach"],[33,45,57,13],[33,50,57,48],[33,60,57,9],[33,62,57,60],[34,0,58,4,"datesArray"],[34,6,58,4,"datesArray"],[34,16,58,14],[34,19,58,17,"dirtyDatesArray"],[34,34,58,4],[35,0,59,3],[35,5,57,9],[35,11,59,9],[36,0,60,4,"datesArray"],[36,6,60,4,"datesArray"],[36,16,60,14],[36,19,60,17,"Array"],[36,24,60,22],[36,25,60,23,"prototype"],[36,34,60,17],[36,35,60,33,"slice"],[36,40,60,17],[36,41,60,39,"call"],[36,45,60,17],[36,46,60,44,"dirtyDatesArray"],[36,61,60,17],[36,62,60,4],[37,0,61,3],[39,0,63,2],[39,8,63,6,"result"],[39,14,63,2],[40,0,64,2],[40,8,64,6,"minDistance"],[40,19,64,2],[41,0,65,2,"datesArray"],[41,4,65,2,"datesArray"],[41,14,65,12],[41,15,65,13,"forEach"],[41,22,65,2],[41,23,65,21],[41,33,65,31,"dirtyDate"],[41,42,65,21],[41,44,65,42],[42,0,66,4],[42,10,66,8,"currentDate"],[42,21,66,19],[42,24,66,22],[42,25,66,23],[42,28,66,26,"_index"],[42,34,66,32],[42,35,66,33,"default"],[42,42,66,22],[42,44,66,42,"dirtyDate"],[42,53,66,22],[42,54,66,4],[44,0,68,4],[44,10,68,8,"isNaN"],[44,15,68,13],[44,16,68,14,"currentDate"],[44,27,68,13],[44,28,68,4],[44,30,68,28],[45,0,69,6,"result"],[45,8,69,6,"result"],[45,14,69,12],[45,17,69,15],[45,21,69,19,"Date"],[45,25,69,15],[45,26,69,24,"NaN"],[45,29,69,15],[45,30,69,6],[46,0,70,6,"minDistance"],[46,8,70,6,"minDistance"],[46,19,70,17],[46,22,70,20,"NaN"],[46,25,70,6],[47,0,71,6],[48,0,72,5],[50,0,74,4],[50,10,74,8,"distance"],[50,18,74,16],[50,21,74,19,"Math"],[50,25,74,23],[50,26,74,24,"abs"],[50,29,74,19],[50,30,74,28,"timeToCompare"],[50,43,74,41],[50,46,74,44,"currentDate"],[50,57,74,55],[50,58,74,56,"getTime"],[50,65,74,44],[50,67,74,19],[50,68,74,4],[52,0,76,4],[52,10,76,8,"result"],[52,16,76,14],[52,20,76,18],[52,24,76,8],[52,28,76,26,"distance"],[52,36,76,34],[52,39,76,37,"minDistance"],[52,50,76,4],[52,52,76,50],[53,0,77,6,"result"],[53,8,77,6,"result"],[53,14,77,12],[53,17,77,15,"currentDate"],[53,28,77,6],[54,0,78,6,"minDistance"],[54,8,78,6,"minDistance"],[54,19,78,17],[54,22,78,20,"distance"],[54,30,78,6],[55,0,79,5],[56,0,80,3],[56,5,65,2],[57,0,81,2],[57,11,81,9,"result"],[57,17,81,2],[58,0,82,1],[60,0,84,0,"module"],[60,2,84,0,"module"],[60,8,84,6],[60,9,84,7,"exports"],[60,16,84,0],[60,19,84,17,"exports"],[60,26,84,24],[60,27,84,25,"default"],[60,34,84,0]]},"type":"js/module"}]}