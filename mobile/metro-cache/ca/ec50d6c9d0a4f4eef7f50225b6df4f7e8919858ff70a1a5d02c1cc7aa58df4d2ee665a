{"dependencies":[{"name":"../toDate/index.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = closestIndexTo;\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../toDate/index.js\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n    if (arguments.length < 2) {\n      throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n    }\n\n    var dateToCompare = (0, _index.default)(dirtyDateToCompare);\n\n    if (isNaN(dateToCompare)) {\n      return NaN;\n    }\n\n    var timeToCompare = dateToCompare.getTime();\n    var datesArray;\n\n    if (dirtyDatesArray == null) {\n      datesArray = [];\n    } else if (typeof dirtyDatesArray.forEach === 'function') {\n      datesArray = dirtyDatesArray;\n    } else {\n      datesArray = Array.prototype.slice.call(dirtyDatesArray);\n    }\n\n    var result;\n    var minDistance;\n    datesArray.forEach(function (dirtyDate, index) {\n      var currentDate = (0, _index.default)(dirtyDate);\n\n      if (isNaN(currentDate)) {\n        result = NaN;\n        minDistance = NaN;\n        return;\n      }\n\n      var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n      if (result == null || distance < minDistance) {\n        result = index;\n        minDistance = distance;\n      }\n    });\n    return result;\n  }\n\n  module.exports = exports.default;\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"default"],[7,17,6,0],[7,20,6,18,"closestIndexTo"],[7,34,6,0],[9,0,8,0],[9,6,8,4,"_index"],[9,12,8,10],[9,15,8,13,"_interopRequireDefault"],[9,37,8,35],[9,38,8,36,"require"],[9,49,8,43],[9,90,8,35],[9,91,8,0],[11,0,10,0],[11,11,10,9,"_interopRequireDefault"],[11,33,10,0],[11,34,10,32,"obj"],[11,37,10,0],[11,39,10,37],[12,0,10,39],[12,11,10,46,"obj"],[12,14,10,49],[12,18,10,53,"obj"],[12,21,10,56],[12,22,10,57,"__esModule"],[12,32,10,46],[12,35,10,70,"obj"],[12,38,10,46],[12,41,10,76],[13,0,10,78,"default"],[13,6,10,78,"default"],[13,13,10,85],[13,15,10,87,"obj"],[14,0,10,76],[14,5,10,39],[15,0,10,95],[17,0,43,0],[17,11,43,9,"closestIndexTo"],[17,25,43,0],[17,26,43,24,"dirtyDateToCompare"],[17,44,43,0],[17,46,43,44,"dirtyDatesArray"],[17,61,43,0],[17,63,43,61],[18,0,44,2],[18,8,44,6,"arguments"],[18,17,44,15],[18,18,44,16,"length"],[18,24,44,6],[18,27,44,25],[18,28,44,2],[18,30,44,28],[19,0,45,4],[19,12,45,10],[19,16,45,14,"TypeError"],[19,25,45,10],[19,26,45,24],[19,62,45,60,"arguments"],[19,71,45,69],[19,72,45,70,"length"],[19,78,45,24],[19,81,45,79],[19,91,45,10],[19,92,45,4],[20,0,46,3],[22,0,48,2],[22,8,48,6,"dateToCompare"],[22,21,48,19],[22,24,48,22],[22,25,48,23],[22,28,48,26,"_index"],[22,34,48,32],[22,35,48,33,"default"],[22,42,48,22],[22,44,48,42,"dirtyDateToCompare"],[22,62,48,22],[22,63,48,2],[24,0,50,2],[24,8,50,6,"isNaN"],[24,13,50,11],[24,14,50,12,"dateToCompare"],[24,27,50,11],[24,28,50,2],[24,30,50,28],[25,0,51,4],[25,13,51,11,"NaN"],[25,16,51,4],[26,0,52,3],[28,0,54,2],[28,8,54,6,"timeToCompare"],[28,21,54,19],[28,24,54,22,"dateToCompare"],[28,37,54,35],[28,38,54,36,"getTime"],[28,45,54,22],[28,47,54,2],[29,0,55,2],[29,8,55,6,"datesArray"],[29,18,55,2],[31,0,57,2],[31,8,57,6,"dirtyDatesArray"],[31,23,57,21],[31,27,57,25],[31,31,57,2],[31,33,57,31],[32,0,58,4,"datesArray"],[32,6,58,4,"datesArray"],[32,16,58,14],[32,19,58,17],[32,21,58,4],[33,0,59,3],[33,5,57,2],[33,11,59,9],[33,15,59,13],[33,22,59,20,"dirtyDatesArray"],[33,37,59,35],[33,38,59,36,"forEach"],[33,45,59,13],[33,50,59,48],[33,60,59,9],[33,62,59,60],[34,0,60,4,"datesArray"],[34,6,60,4,"datesArray"],[34,16,60,14],[34,19,60,17,"dirtyDatesArray"],[34,34,60,4],[35,0,61,3],[35,5,59,9],[35,11,61,9],[36,0,62,4,"datesArray"],[36,6,62,4,"datesArray"],[36,16,62,14],[36,19,62,17,"Array"],[36,24,62,22],[36,25,62,23,"prototype"],[36,34,62,17],[36,35,62,33,"slice"],[36,40,62,17],[36,41,62,39,"call"],[36,45,62,17],[36,46,62,44,"dirtyDatesArray"],[36,61,62,17],[36,62,62,4],[37,0,63,3],[39,0,65,2],[39,8,65,6,"result"],[39,14,65,2],[40,0,66,2],[40,8,66,6,"minDistance"],[40,19,66,2],[41,0,67,2,"datesArray"],[41,4,67,2,"datesArray"],[41,14,67,12],[41,15,67,13,"forEach"],[41,22,67,2],[41,23,67,21],[41,33,67,31,"dirtyDate"],[41,42,67,21],[41,44,67,42,"index"],[41,49,67,21],[41,51,67,49],[42,0,68,4],[42,10,68,8,"currentDate"],[42,21,68,19],[42,24,68,22],[42,25,68,23],[42,28,68,26,"_index"],[42,34,68,32],[42,35,68,33,"default"],[42,42,68,22],[42,44,68,42,"dirtyDate"],[42,53,68,22],[42,54,68,4],[44,0,70,4],[44,10,70,8,"isNaN"],[44,15,70,13],[44,16,70,14,"currentDate"],[44,27,70,13],[44,28,70,4],[44,30,70,28],[45,0,71,6,"result"],[45,8,71,6,"result"],[45,14,71,12],[45,17,71,15,"NaN"],[45,20,71,6],[46,0,72,6,"minDistance"],[46,8,72,6,"minDistance"],[46,19,72,17],[46,22,72,20,"NaN"],[46,25,72,6],[47,0,73,6],[48,0,74,5],[50,0,76,4],[50,10,76,8,"distance"],[50,18,76,16],[50,21,76,19,"Math"],[50,25,76,23],[50,26,76,24,"abs"],[50,29,76,19],[50,30,76,28,"timeToCompare"],[50,43,76,41],[50,46,76,44,"currentDate"],[50,57,76,55],[50,58,76,56,"getTime"],[50,65,76,44],[50,67,76,19],[50,68,76,4],[52,0,78,4],[52,10,78,8,"result"],[52,16,78,14],[52,20,78,18],[52,24,78,8],[52,28,78,26,"distance"],[52,36,78,34],[52,39,78,37,"minDistance"],[52,50,78,4],[52,52,78,50],[53,0,79,6,"result"],[53,8,79,6,"result"],[53,14,79,12],[53,17,79,15,"index"],[53,22,79,6],[54,0,80,6,"minDistance"],[54,8,80,6,"minDistance"],[54,19,80,17],[54,22,80,20,"distance"],[54,30,80,6],[55,0,81,5],[56,0,82,3],[56,5,67,2],[57,0,83,2],[57,11,83,9,"result"],[57,17,83,2],[58,0,84,1],[60,0,86,0,"module"],[60,2,86,0,"module"],[60,8,86,6],[60,9,86,7,"exports"],[60,16,86,0],[60,19,86,17,"exports"],[60,26,86,24],[60,27,86,25,"default"],[60,34,86,0]]},"type":"js/module"}]}